(function () {
    let jsonData = getJson();
    console.log(jsonData);

    let table = document.createElement('table');
    let results = []



    for(let i = 0; i < results.length; i++ ) {

        let child = results[i];
        if(i === 0 ) {
            addHeaders(table, Object.keys(child));
        }
        let row = table.insertRow();
        Object.keys(child).forEach(function(k) {
            console.log(k);
            var cell = row.insertCell();
            cell.appendChild(document.createTextNode(child[k]));
        })
    }

    document.getElementById('container').appendChild(table);
})();

function getJson() {
    return loadJSON(function (response) {
        // Parse JSON string into object
        let actual_JSON = JSON.parse(response);
        console.log(actual_JSON);
        return actual_JSON;
    });

}

function loadJSON(callback) {

    let request = new XMLHttpRequest();
    request.overrideMimeType("application/json");
    request.open('GET', 'data.json', true); // Replace 'my_data' with the path to your file
    request.onreadystatechange = function () {
        if (request.readyState === 4 && request.status === "200") {
            // Required use of an anonymous callback as .open will NOT return a value but simply returns undefined in asynchronous mode
            callback(request.responseText);
        }
    };
    request.send(null);
}

function addHeaders(table, keys) {
    let row = table.insertRow();
    for(let i = 0; i < keys.length; i++ ) {
        const cell = row.insertCell();
        cell.appendChild(document.createTextNode(keys[i]));
    }
}